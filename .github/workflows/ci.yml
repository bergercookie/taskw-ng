name: CI
on:
  push:
  pull_request:
jobs:
  install_with_pip3:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install with pip3
        run: |
          pip3 install .
          pip3 show taskw-ng
  style_and_linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.3
        with:
          poetry-version: "1.6.1"
      - name: Install prerequisites
        run: |
          poetry install
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Run style checkers and linters
        run: poetry run pre-commit run --all-files
  build_n_run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        taskwarrior-version: [2.5.3, 2.6.2]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Taskwarrior ${{matrix.taskwarrior-version}}
        run: |
          sudo apt-get install -y python3 python3-dev cmake build-essential libgnutls28-dev uuid-dev gnutls-bin chrpath libssl-dev libfontconfig1-dev
          git clone https://github.com/GothenburgBitFactory/taskwarrior.git
          cd taskwarrior
          git checkout v${{matrix.taskwarrior-version}}
          cmake .
          make -j
          sudo make install
          task --version
          cd ../
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip3 install .
          python -m pip install pytest
      - name: Run Tests
        run: |
          cp test/data/test.taskrc ~/.taskrc
          pytest
  publish_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish package to pypi
        uses: JRubics/poetry-publish@v1.16
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
          plugins: "poetry-dynamic-versioning[plugin]"
